pipeline
{
    agent
    {
        label 'lib-build'
    }

    options
    {
        skipDefaultCheckout(true)
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

    stages
    {
        stage('Checkout')
		{
			steps
			{
				deleteDir()
				checkout(
					changelog: true,
					poll: true,
					scm: [$class: 'GitSCM', branches: [[name: env.BRANCH_NAME]],
						doGenerateSubmoduleConfigurations: false,
						extensions: [[
							$class: 'SubmoduleOption',
							disableSubmodules: false,
							parentCredentials: true,
							recursiveSubmodules: true,
							reference: '',
							trackingSubmodules: false
						]],
						submoduleCfg: [],
						userRemoteConfigs: [[
							credentialsId: 'Github user',
							url: 'https://github.com/systelab/cpp-sftp-adapter.git'
						]]
					]
				)
			}
		}
        stage('Read properties')
        {
            steps
            {
                script
                {
                    println 'Reading pipeline properties'
                    props = readProperties file:'build/pipelines/pipeline.properties'
                    props.each { propKey, propValue -> println "${propKey}: ${propValue}" }
                }
            }
        }
        stage('Build')
        {
            steps
            {
                script
				{
					if (params.createVersion)
					{
						sh script: "build/scripts/setVersionNumber.sh -v ${params.version}", label: "Set version number if applicable"
					}
					props.projectConfigurations.split(',').each
					{ config ->
						props.buildProjects.split(',').each
						{ project ->
								sh script: "build/scripts/build.sh -p '${project}' -c '${config}' -r '$WORKSPACE' -s '${props.solutionPath}' -d '$VS150COMNTOOLS\\..\\IDE\\devenv.com' -v " + ((params.version == "") ? "0.0.0" : "${params.version}") + " -n " + ((params.stable) ? "stable" : "testing"), label: "Build project '${project}' for '${config}'"
						}
					}
				}           
            }
        }
    }
}